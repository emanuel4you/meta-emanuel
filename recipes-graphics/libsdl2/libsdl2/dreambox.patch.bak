diff -Nur SDL-mirror-2/src/video/dreambox/SDL_dreambox.c SDL-mirror-Dreambox/src/video/dreambox/SDL_dreambox.c
--- SDL-mirror-2/src/video/dreambox/SDL_dreambox.c	2017-03-30 14:04:01.782491836 +0200
+++ SDL-mirror-Dreambox/src/video/dreambox/SDL_dreambox.c	2017-03-30 15:56:46.346548288 +0200
@@ -23,7 +23,7 @@
 */
 #include "../../SDL_internal.h"
 
-#if SDL_VIDEO_DRIVER_DREAMBOX
+#if SDL_VIDEO_DRIVER_DREAMBOX && SDL_VIDEO_OPENGL_EGL
 
 /* SDL internals */
 #include "../SDL_sysvideo.h"
@@ -39,7 +39,6 @@
 #include <fcntl.h>
 #include <linux/fb.h>
 #include <sys/ioctl.h>
-#include "EGL/egl.h"
 #include "GLES2/gl2.h"
 
 #define DREAMBOX_DEBUG
@@ -486,20 +485,6 @@
 	return ret;
 }
 
-void *
-DREAM_gl_getprocaddres(_THIS, const char *proc)
-{
-#ifdef DREAMBOX_DEBUG
-	fprintf(stderr, "DREAM: gl_getprocaddres %s\n",proc);
-#endif
-	return NULL;
-}
-
-void
-DREAM_gl_unloadlibrary(_THIS)
-{
-}
-
 SDL_GLContext
 DREAM_gl_createcontext(_THIS, SDL_Window * window)
 {
@@ -839,44 +824,6 @@
 }
 
 int
-DREAM_gl_setswapinterval(_THIS, int interval)
-{
-	SDL_VideoData *phdata = (SDL_VideoData *) _this->driverdata;
-	EGLBoolean status;
-	
-#ifdef DREAMBOX_DEBUG
-	fprintf(stderr, "DREAM: setswapinterval\n");
-#endif
-	
-	if (phdata->egl_initialized != SDL_TRUE) {
-		return SDL_SetError("DREAM: EGL initialization failed, no OpenGL ES support");
-	}
-
-	/* Check if OpenGL ES connection has been initialized */
-	if (phdata->egl_display != EGL_NO_DISPLAY) {
-		/* Set swap OpenGL ES interval */
-		status = eglSwapInterval(phdata->egl_display, interval);
-		if (status == EGL_TRUE) {
-			/* Return success to upper level */
-			phdata->swapinterval = interval;
-			return 0;
-		}
-	}
-
-	/* Failed to set swap interval */
-	return SDL_SetError("DREAM: Cannot set swap interval");
-}
-
-int
-DREAM_gl_getswapinterval(_THIS)
-{
-#ifdef DREAMBOX_DEBUG
-	fprintf(stderr, "DREAM: getswapinterval\n");
-#endif
-	return ((SDL_VideoData *) _this->driverdata)->swapinterval;
-}
-
-int
 DREAM_gl_swapwindow(_THIS, SDL_Window * window)
 {
 	SDL_VideoData *phdata = (SDL_VideoData *) _this->driverdata;
@@ -902,36 +849,6 @@
 	return 0;
 }
 
-void
-DREAM_gl_deletecontext(_THIS, SDL_GLContext context)
-{
-	SDL_VideoData *phdata = (SDL_VideoData *) _this->driverdata;
-	EGLBoolean status;
-	
-#ifdef DREAMBOX_DEBUG
-	fprintf(stderr, "DREAM: deletecontext\n");
-#endif
-	
-	if (phdata->egl_initialized != SDL_TRUE) {
-		SDL_SetError("DREAM: GLES initialization failed, no OpenGL ES support");
-		return;
-	}
-
-	/* Check if OpenGL ES connection has been initialized */
-	if (phdata->egl_display != EGL_NO_DISPLAY) {
-		if (context != EGL_NO_CONTEXT) {
-			status = eglDestroyContext(phdata->egl_display, context);
-			if (status != EGL_TRUE) {
-				/* Error during OpenGL ES context destroying */
-				SDL_SetError("DREAM: OpenGL ES context destroy error");
-				return;
-			}
-		}
-	}
-
-	return;
-}
-
-#endif /* SDL_VIDEO_DRIVER_DREAMBOX */
+#endif /* SDL_VIDEO_DRIVER_DREAMBOX && SDL_VIDEO_OPENGL_EGL */
 
 /* vi: set ts=4 sw=4 expandtab: */
diff -Nur SDL-mirror-2/src/video/dreambox/SDL_dreambox.h SDL-mirror-Dreambox/src/video/dreambox/SDL_dreambox.h
--- SDL-mirror-2/src/video/dreambox/SDL_dreambox.h	2017-03-30 14:04:01.782491836 +0200
+++ SDL-mirror-Dreambox/src/video/dreambox/SDL_dreambox.h	2017-03-30 15:58:19.118549063 +0200
@@ -25,10 +25,20 @@
 #ifndef __SDL_DREAMBOX_H__
 #define __SDL_DREAMBOX_H__
 
+#if SDL_VIDEO_DRIVER_DREAMBOX && SDL_VIDEO_OPENGL_EGL
+
 #include <GLES/egl.h>
 
 #include "../../SDL_internal.h"
 #include "../SDL_sysvideo.h"
+#include "../SDL_egl_c.h"
+
+#define DREAM_gl_getattribute SDL_EGL_GetAttribute
+#define DREAM_gl_getprocaddres SDL_EGL_GetProcAddress
+#define DREAM_gl_unloadlibrary SDL_EGL_UnloadLibrary
+#define DREAM_gl_setswapinterval SDL_EGL_SetSwapInterval
+#define DREAM_gl_getswapinterval SDL_EGL_GetSwapInterval
+#define DREAM_gl_deletecontext SDL_EGL_DeleteContext
 
 typedef struct SDL_VideoData
 {
@@ -94,16 +104,13 @@
 
 /* OpenGL/OpenGL ES functions */
 int DREAM_gl_loadlibrary(_THIS, const char *path);
-void *DREAM_gl_getprocaddres(_THIS, const char *proc);
-void DREAM_gl_unloadlibrary(_THIS);
 SDL_GLContext DREAM_gl_createcontext(_THIS, SDL_Window * window);
 int DREAM_gl_makecurrent(_THIS, SDL_Window * window, SDL_GLContext context);
-int DREAM_gl_setswapinterval(_THIS, int interval);
-int DREAM_gl_getswapinterval(_THIS);
 int DREAM_gl_swapwindow(_THIS, SDL_Window * window);
-void DREAM_gl_deletecontext(_THIS, SDL_GLContext context);
 
 
+#endif /* SDL_VIDEO_DRIVER_DREAMBOX && SDL_VIDEO_OPENGL_EGL */
+
 #endif /* __SDL_DREAMBOX_H__ */
 
 /* vi: set ts=4 sw=4 expandtab: */
